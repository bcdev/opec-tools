General TODO:

- add logging
- extend read mechanism by 'force' flag that, well, forces to read from disk, overwriting old values
- extend read mechanism by smarter caching means
- allow clearing of cache
- document how to work with the tool, i.e., create a dump of the console when doing something smart with the tool
- add parameter allowing to zip the output
- add target + taylor diagram output facility
- don't read each pixel from disk in matchup engine
- restructure project according to https://python-guide.readthedocs.org/en/latest/writing/structure/ and http://docs.python.org/3.3/tutorial/modules.html#packages

Requirements:

allow easy access for user, including write access to data:
- data is a dictionary
- structure: varName -> numpyArray
- contains dedicated 'read' methods
    - 'read' reads from disk the given variable data, given by origin or shape (or fully)
    - puts the data into the dictionary, so it can be accessed without the need to be read again

proposed output format:
- CSV containing statistics
- PNG images of target/taylor diagrams
- example CSV:

##############################################################
#
# Benchmarking results of file 'chl_DMI.nc'
#
##############################################################
#
# Created on Jan 02nd, 2013
#
# Matchup criteria:
#    macro pixel size = 3
#    maximum geographic delta = 10 "degrees"
#    maximum time delta = 20000 seconds
#    maximum depth delta = 10 meters
#
# Parameters:
#    Delta Degrees of Freedom (used for computation of stddev) = 1
#    alpha (used for percentile computation) = 0.4
#    beta (used for percentile computation) = 0.4
#
variable_name   reference_variable_name matchup_count   min max mean    stddev  median  p90 p95 ref_min ref_max ref_mean    ref_stddev  ref_median  ref_p90 ref_p95 rmsd    unbiased_rmsd   bias    pbias   correlation_coefficient reliability_index   model_efficiency
chl-a   chl_ref 10 0.1 0.2 0.3 0.4 0.5 0.6 0.7